openapi: 3.0.0
info:
  title: OSCAL SERVER
  version: 1.0.0
  description: API for validating, resolving, and converting OSCAL documents

paths:
  /health:
      get:
        operationId: healthCheck
        summary: Check the health of the server
        description: Returns the health status of the server and the number of active workers
        responses:
          '200':
            description: Successful health check response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/HealthResponse'
          '500':
            $ref: '#/components/responses/InternalServerError'
  /validate:
    get:
      operationId: validate
      summary: Validate remote OSCAL document
      parameters:
        - in: query
          name: document
          required: true
          schema:
            type: string
          description: URI of an OSCAL document to validate
          example: https://raw.githubusercontent.com/GSA/fedramp-automation/refs/heads/develop/src/validations/constraints/content/ssp-all-VALID.xml
        - in: query
          name: constraint
          required: false
          schema:
            type: array
            items:
              type: string
          description: URIs of metaschema extension modules to load
          example: 
            - https://raw.githubusercontent.com/GSA/fedramp-automation/refs/heads/develop/src/validations/constraints/fedramp-external-constraints.xml
            - https://raw.githubusercontent.com/GSA/fedramp-automation/refs/heads/develop/src/validations/constraints/fedramp-external-constraints.xml
        - in: query
          name: module
          required: false
          schema:
            type: string
          description: Metaschema-module
          example: https://raw.githubusercontent.com/GSA/fedramp-automation/refs/heads/develop/src/validations/constraints/fedramp-external-constraints.xml
        - in: query
          name: flags
          required: false
          schema:
            type: array
            items:
              type: string
              enum: [disable-schema, disable-constraint]
          description: URIs of metaschema extension modules to load
          example: disable-schema
      responses:
        '200':
          $ref: '#/components/responses/SarifResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      operationId: validateUpload
      summary: Validate uploaded OSCAL document
      parameters:
        - in: query
          name: constraint
          required: false
          schema:
            type: array
            items:
              type: string
          description: URIs of metaschema extension modules to load
          example: 
            - https://raw.githubusercontent.com/GSA/fedramp-automation/refs/heads/develop/src/validations/constraints/fedramp-external-constraints.xml
            - https://raw.githubusercontent.com/wandmagic/fedramp-automation/refs/heads/feature/external-constraints/src/validations/constraints/unit-tests/attachment-type-FAIL.yaml
        - in: query
          name: module
          required: false
          schema:
            type: string
          description: Metaschema-module
          example: https://raw.githubusercontent.com/aj-stein-gsa/fedramp-automation/bd294a32d23114bdcf52aeeca2d81f785fd5bc37/src/validations/constraints/unit-tests/unit_test_metaschema.xml
        - in: query
          name: flags
          required: false
          schema:
            type: array
            items:
              type: string
              enum: [disable-schema, disable-constraint]
          description: URIs of metaschema extension modules to load
          example: disable-schema
      requestBody:
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          $ref: '#/components/responses/SarifResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /resolve:
    get:
      operationId: resolve
      summary: Resolve OSCAL local document
      parameters:
        - in: query
          name: document
          required: true
          schema:
            type: string
          description: Absolute Path of the local OSCAL document to resolve
          example:
            - /Users/esper/fedramp-automation/dist/content/rev5/baselines/json/FedRAMP_rev5_HIGH-baseline_profile.json
        - in: query
          name: format
          required: false
          schema:
            type: string
            enum: [json, yaml, xml]
          description: Specify the format of the response
          example: json
      responses:
        '200':
          $ref: '#/components/responses/OscalResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      operationId: resolveUpload
      summary: Resolve uploaded OSCAL document
      parameters:
        - in: query
          name: format
          required: false
          schema:
            type: string
            enum: [json, yaml, xml]
          description: Specify the format of the response
          example: json
      requestBody:
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          $ref: '#/components/responses/OscalResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /convert:
    get:
      operationId: convert
      summary: Convert OSCAL document
      parameters:
        - in: query
          name: document
          required: true
          schema:
            type: string
          description: URI of the remote OSCAL document to convert
        - in: query
          name: format
          required: false
          schema:
            type: string
            enum: [json, yaml, xml]
          description: Specify the format of the response
          example: json
      responses:
        '200':
          $ref: '#/components/responses/OscalResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      operationId: convertUpload
      summary: Convert uploaded OSCAL document
      parameters:
        - in: query
          name: format
          required: false
          schema:
            type: string
            enum: [json, yaml, xml]
          description: Specify the format of the response
          example: json
      requestBody:
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          $ref: '#/components/responses/OscalResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /query:
    get:
      operationId: query
      summary: Query OSCAL document
      parameters:
        - in: query
          name: document
          required: true
          schema:
            type: string
          description: URI of the remote OSCAL document to convert
          example: https://raw.githubusercontent.com/wandmagic/fedramp-automation/refs/heads/develop/src/validations/constraints/content/ssp-all-VALID.xml
        - in: query
          name: expression
          required: false
          schema:
            type: string
          description: metapath expression to query oscal document
          example: //user
      responses:
        '200':
          $ref: '#/components/responses/OscalResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      operationId: queryUpload
      summary: Query uploaded OSCAL document
      parameters:
        - in: query
          name: expression
          required: true
          schema:
            type: string
          description: metapath expression to query oscal document
          example: //user
      requestBody:
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          $ref: '#/components/responses/OscalResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    HealthResponse:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, unhealthy]
        activeWorkers:
          type: integer
          description: The number of currently active workers
    SarifResponse:
      type: object
      properties:
        version:
          type: string
        runs:
          type: array
          items:
            type: object

    Error:
      type: object
      properties:
        error:
          type: string

  responses:
    SarifResponse:
      description: Successful SARIF response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SarifResponse'

    OscalResponse:
      description: Successful OSCAL response
      content:
        application/json:
          schema:
            type: string
        text/xml:
          schema:
            type: string
        text/yaml:
          schema:
            type: string

    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
